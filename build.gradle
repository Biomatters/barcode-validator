task wrapper(type: Wrapper) {
    gradleVersion = "2.2"
}

subprojects {
    apply plugin: "java"

    repositories {
        ivy {
            url "http://assets.geneious.com/developer/geneious/ivy"
            layout "pattern", {
                ivy "[organisation]/[module]/ivys/ivy-[revision].xml"
                artifact "[organisation]/[module]/[type]s/[artifact]-[type]-[revision].[ext]"
            }
        }
        mavenCentral()
    }

    task extractGeneiousRuntimeFiles(type: Copy) {
        def collection = configurations.testRuntime.filter {
            it.getName().endsWith(".zip")
        }

        from {zipTree(collection.singleFile)}
        into new File(projectDir, "GeneiousFiles")
    }

    // Running the test task will depend on making the Geneious Runtime available
    tasks.test.dependsOn(extractGeneiousRuntimeFiles)

    tasks.test {
        workingDir files("GeneiousFiles").singleFile
    }

    jar {
        include "**/*.class"
        includeEmptyDirs false
    }

    compileJava {
        sourceCompatibility "1.6"
        targetCompatibility "1.6"
    }

    clean {
        println new File(projectDir, "GeneiousFiles")
        new File(projectDir, "GeneiousFiles").deleteDir()
    }

    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            resources {
                srcDir 'resources'
            }
        }

        test {
            java {
                srcDir 'test'
            }
            resources {
                srcDir 'testdata'
                srcDir "GeneiousFiles/resources"
            }
            File geneiousFiles = new File(projectDir, "GeneiousFiles")
            runtimeClasspath = runtimeClasspath + files(new File(geneiousFiles, "iSeek.jar"))
            runtimeClasspath = runtimeClasspath + files {new File(geneiousFiles, "lib").listFiles()}
        }
    }
}